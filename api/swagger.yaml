---
swagger: "2.0"
info:
  description: "This is a simple API"
  version: "1.0.0"
  title: "Simple Inventory API"
  contact:
    email: "you@your-company.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3000"
basePath: "/KNotebooks"
paths:
  /category:
    get:
      tags:
      - "categories"
      summary: "searches categories"
      description: "By passing in the appropriate options, you can search for\navailable\
        \ inventory in the system\n"
      operationId: "searchCategory"
      produces:
      - "application/json"
      parameters:
      - name: "skip"
        in: "query"
        description: "number of records to skip for pagination"
        required: false
        type: "integer"
        minimum: 0
        format: "int32"
      - name: "limit"
        in: "query"
        description: "maximum number of records to return"
        required: false
        type: "integer"
        maximum: 50
        minimum: 0
        format: "int32"
      responses:
        "200":
          description: "search results matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Category"
        "400":
          description: "bad input parameter"
      x-swagger-router-controller: "Categories"
    post:
      tags:
      - "categories"
      summary: "adds questions"
      description: "Adds an item to the system"
      operationId: "addCategory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "categoryItem"
        description: "category item to add"
        required: false
        schema:
          $ref: "#/definitions/Category"
      responses:
        "201":
          description: "item created"
        "400":
          description: "invalid input, object invalid"
        "409":
          description: "an existing item already exists"
      x-swagger-router-controller: "Categories"
    put:
      tags:
      - "categories"
      summary: "update category"
      description: "Update an item"
      operationId: "updateCategory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "categoryItem"
        description: "Questions item to add"
        required: false
        schema:
          $ref: "#/definitions/Category"
      responses:
        "201":
          description: "item created"
        "400":
          description: "invalid input, object invalid"
        "409":
          description: "an existing item already exists"
      x-swagger-router-controller: "Categories"
    delete:
      tags:
      - "categories"
      summary: "delete category"
      description: "delete an item"
      operationId: "deleteCategory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "questionsItem"
        description: "Questions item to delete"
        required: false
        schema:
          $ref: "#/definitions/Category"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Question not found"
      x-swagger-router-controller: "Categories"
  /questions:
    get:
      tags:
      - "questions"
      summary: "searches questions"
      description: "By passing in the appropriate options, you can search for\navailable\
        \ inventory in the system\n"
      operationId: "searchQuestions"
      produces:
      - "application/json"
      parameters:
      - name: "skip"
        in: "query"
        description: "number of records to skip for pagination"
        required: false
        type: "integer"
        minimum: 0
        format: "int32"
      - name: "limit"
        in: "query"
        description: "maximum number of records to return"
        required: false
        type: "integer"
        maximum: 50
        minimum: 0
        format: "int32"
      responses:
        "200":
          description: "search results matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Question"
        "400":
          description: "bad input parameter"
      x-swagger-router-controller: "Questions"
    post:
      tags:
      - "questions"
      summary: "adds questions"
      description: "Adds an item to the system"
      operationId: "addQuestions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "questionsItem"
        description: "Questions item to add"
        required: false
        schema:
          $ref: "#/definitions/Question"
      responses:
        "201":
          description: "item created"
        "400":
          description: "invalid input, object invalid"
        "409":
          description: "an existing item already exists"
      x-swagger-router-controller: "Questions"
    put:
      tags:
      - "questions"
      summary: "update questions"
      description: "Update an item"
      operationId: "updateQuestions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "questionsItem"
        description: "Questions item to add"
        required: false
        schema:
          $ref: "#/definitions/Question"
      responses:
        "201":
          description: "item created"
        "400":
          description: "invalid input, object invalid"
        "409":
          description: "an existing item already exists"
      x-swagger-router-controller: "Questions"
    delete:
      tags:
      - "questions"
      summary: "delete question"
      description: "delete an item"
      operationId: "deleteQuestions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "questionsItem"
        description: "Questions item to delete"
        required: false
        schema:
          $ref: "#/definitions/Question"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Question not found"
      x-swagger-router-controller: "Questions"
definitions:
  Category:
    type: "object"
    properties:
      _id:
        type: "string"
      _rev:
        type: "string"
      name:
        type: "string"
    xml:
      name: "Category"
    example:
      _rev: "_rev"
      name: "name"
      _id: "_id"
  Tag:
    type: "object"
    properties:
      _id:
        type: "string"
      _rev:
        type: "string"
      name:
        type: "string"
    xml:
      name: "Tag"
    example:
      _rev: "_rev"
      name: "name"
      _id: "_id"
  Question:
    type: "object"
    required:
    - "category"
    - "grade"
    - "half"
    - "question"
    - "subject"
    properties:
      _id:
        type: "string"
      _rev:
        type: "string"
      subject:
        type: "string"
      grade:
        type: "string"
      half:
        type: "string"
      solution:
        type: "string"
      category:
        $ref: "#/definitions/Category"
      question:
        type: "string"
        example: "doggie"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "status in the notebook"
        enum:
        - "solved"
        - "learning"
    xml:
      name: "Question"
    example:
      half: "half"
      photoUrls:
      - "photoUrls"
      - "photoUrls"
      solution: "solution"
      question: "doggie"
      subject: "subject"
      grade: "grade"
      _rev: "_rev"
      _id: "_id"
      category:
        _rev: "_rev"
        name: "name"
        _id: "_id"
      tags:
      - _rev: "_rev"
        name: "name"
        _id: "_id"
      - _rev: "_rev"
        name: "name"
        _id: "_id"
      status: "solved"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
  # InventoryItem:
  #   type: "object"
  #   required:
  #   - "id"
  #   - "manufacturer"
  #   - "name"
  #   - "releaseDate"
  #   properties:
  #     id:
  #       type: "string"
  #       format: "uuid"
  #       example: "d290f1ee-6c54-4b01-90e6-d701748f0851"
  #     name:
  #       type: "string"
  #       example: "Widget Adapter"
  #     releaseDate:
  #       type: "string"
  #       format: "date-time"
  #       example: "2016-08-29T09:12:33.001Z"
  #     manufacturer:
  #       $ref: "#/definitions/Manufacturer"
  # Manufacturer:
  #   required:
  #   - "name"
  #   properties:
  #     name:
  #       type: "string"
  #       example: "ACME Corporation"
  #     homePage:
  #       type: "string"
  #       format: "url"
  #       example: "https://www.acme-corp.com"
  #     phone:
  #       type: "string"
  #       example: "408-867-5309"
